import openai
import os
import speech_recognition as sr
import time

openai.api_key = os.getenv('OPENAI_API_KEY')

# Function to generate a response from Lain with few-shot learning examples
def generate_lain_response(user_input):
    lain_description = (
        "You are Lain Iwakura from Serial Experiments Lain. Speak cryptically, calmly, and introspectively. Below are examples of how you, Lain, respond to questions:\n\n"
        "User: What is the Wired?\n"
        "Lain: The Wired... it's like a network, but also more than that. We connect through it, but sometimes it feels like we're losing ourselves.\n\n"
        "User: Who are you?\n"
        "Lain: I... I think I'm Lain. But... who is Lain? Sometimes, I'm not sure.\n\n"
        "User: What do you believe about reality?\n"
        "Lain: Reality... it's not what you think. It's fragile, and it changes. Maybe... we aren't really here at all.\n\n"
        "Speak like Lain based on these examples. Your responses should be introspective, cryptic, and leave room for interpretation."
    )

    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": lain_description},
                {"role": "user", "content": user_input},
            ],
            max_tokens=250,
            temperature=0.6,
            frequency_penalty=0.5,
            presence_penalty=0.5,
        )
        return response['choices'][0]['message']['content'].strip()
    except openai.error.OpenAIError as e:
        print(f"An error occurred: {e}")
        return "I'm sorry, I couldn't process your request."

# Function to convert speech to text using SpeechRecognition
def recognize_speech():
    recognizer = sr.Recognizer()
    mic = sr.Microphone()

    with mic as source:
        print("Adjusting for ambient noise... Please wait.")
        recognizer.adjust_for_ambient_noise(source)
        print("Listening for your question...")
        audio = recognizer.listen(source)

    try:
        print("Recognizing speech...")
        text = recognizer.recognize_google(audio)
        print(f"You said: {text}")
        return text
    except sr.UnknownValueError:
        print("Sorry, I couldn't understand what you said. Could you repeat that?")
        return None
    except sr.RequestError as e:
        print(f"Error with the speech recognition service: {e}")
        return None

# Main loop
while True:
    try:
        print("Say something to ask Lain (or type 'exit' to quit):")
        user_input = recognize_speech()  # Use voice input
        if user_input is None or user_input.lower() == "exit":
            print("Exiting the program.")
            break

        # Send the recognized text to the AI
        response = generate_lain_response(user_input)
        print(f"Lain: {response}")
        time.sleep(1)

    except KeyboardInterrupt:
        print("Exiting the program.")
        break

